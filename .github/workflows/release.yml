name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'
          check-latest: true

      - name: Build for all platforms
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/rx_linux_amd64
          GOOS=linux GOARCH=arm64 go build -o dist/rx_linux_arm64
          GOOS=darwin GOARCH=amd64 go build -o dist/rx_darwin_amd64
          GOOS=darwin GOARCH=arm64 go build -o dist/rx_darwin_arm64
          GOOS=windows GOARCH=amd64 go build -o dist/rx_windows_amd64.exe

      - name: Zip binaries
        run: |
          cd dist
          chmod +x rx_*
          zip -r rx_linux_amd64.zip rx_linux_amd64
          zip -r rx_linux_arm64.zip rx_linux_arm64
          zip -r rx_darwin_amd64.zip rx_darwin_amd64
          zip -r rx_darwin_arm64.zip rx_darwin_arm64
          zip -r rx_windows_amd64.zip rx_windows_amd64.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            ## rx-cli ${{ github.ref }}
            
            A hacker's helper tool for CTF challenges like HackTheBox and TryHackMe.
            
            ### Binary Downloads
            
            - Linux (amd64): [rx_linux_amd64.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/rx_linux_amd64.zip)
            - Linux (arm64): [rx_linux_arm64.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/rx_linux_arm64.zip)
            - macOS (amd64): [rx_darwin_amd64.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/rx_darwin_amd64.zip)
            - macOS (arm64): [rx_darwin_arm64.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/rx_darwin_arm64.zip)
            - Windows: [rx_windows_amd64.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/rx_windows_amd64.zip)
            
            ### Usage
            
            ```bash
            # Download and extract the appropriate file for your platform
            # For Linux/macOS (replace with your platform's filename)
            unzip rx_linux_amd64.zip
            chmod +x rx_linux_amd64
            # Optional: move to a directory in your PATH
            sudo mv rx_linux_amd64 /usr/local/bin/rx
            ```

      - name: Upload Linux AMD64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rx_linux_amd64.zip
          asset_name: rx_linux_amd64.zip
          asset_content_type: application/zip

      - name: Upload Linux ARM64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rx_linux_arm64.zip
          asset_name: rx_linux_arm64.zip
          asset_content_type: application/zip

      - name: Upload macOS AMD64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rx_darwin_amd64.zip
          asset_name: rx_darwin_amd64.zip
          asset_content_type: application/zip

      - name: Upload macOS ARM64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rx_darwin_arm64.zip
          asset_name: rx_darwin_arm64.zip
          asset_content_type: application/zip

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/rx_windows_amd64.zip
          asset_name: rx_windows_amd64.zip
          asset_content_type: application/zip 